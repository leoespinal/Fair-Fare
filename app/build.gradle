apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.leoespinal.fairfare"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "UBER_CLIENT_ID", "\"${loadSecret("UBER_CLIENT_ID")}\""
        buildConfigField "String", "UBER_REDIRECT_URI", "\"${loadSecret("UBER_REDIRECT_URI")}\""
        buildConfigField "String", "LYFT_CLIENT_ID", "\"${loadSecret("LYFT_CLIENT_ID")}\""
        buildConfigField "String", "LYFT_CLIENT_TOKEN", "\"${loadSecret("LYFT_CLIENT_TOKEN")}\""
        buildConfigField "String", "LYFT_PACKAGE_NAME", "\"${loadSecret("LYFT_PACKAGE_NAME")}\""
        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-auth:15.1.0'
    implementation 'com.firebaseui:firebase-ui-auth:3.3.1'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'com.uber.sdk:rides-android:0.5.3'
    implementation 'com.lyft:lyft-android-sdk:1.0.3'
    implementation 'com.google.android.gms:play-services-places:15.0.1'
}

apply plugin: 'com.google.gms.google-services'

/*
*
* Finds confidential properties from the gradle.properties file
*
* */

def loadSecret(String propertyName) {
    return hasProperty(propertyName) ? getProperty(propertyName) : "MISSING"
}


